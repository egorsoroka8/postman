{
	"info": {
		"_postman_id": "14f12d0b-9e98-4c00-acf7-eb5b69ff202a",
		"name": "DummyAPI",
		"description": "# Models\n\n### List\n\nData structure for all responses that return array of data.  \nIn case you get single item your will get it directly.\n\n``` plaintext\n{\ndata: Array(Model)\ntotal: number(total items in DB)\npage: number(current page)\nlimit: number(number of items on page)\n}\n\n```\n\n### User Preview\n\nUser as a part of list or other data like post/comment.\n\n```\n{\nid: string(autogenerated)\ntitle: string(\"mr\", \"ms\", \"mrs\", \"miss\", \"dr\", \"\")\nfirstName: string(length: 2-50)\nlastName: string(length: 2-50)\npicture: string(url)\n}\n\n```\n\n### User Full\n\nFull user data returned by id.\n\n```\n{\nid: string(autogenerated)\ntitle: string (\"mr\", \"ms\", \"mrs\", \"miss\", \"dr\", \"\")\nfirstName: string(length: 2-50)\nlastName: string(length: 2-50)\ngender: string(\"male\", \"female\", \"other\", \"\")\nemail: string(email)\ndateOfBirth: string(ISO Date - value: 1/1/1900 - now)\nregisterDate: string(autogenerated)\nphone: string(phone number - any format)\npicture: string(url)\nlocation: object(Location)\n}\n\n```\n\n### Location\n\nUsing only as a part of full user data.\n\n```\n{\nstreet: string(length: 5-100)\ncity: string(length: 2-30)\nstate: string(length: 2-30)\ncountry: string(length: 2-30)\ntimezone: string(Valid timezone value ex. +7:00, -1:00)\n}\n\n```\n\n### Post Create\n\nPost data for create request.\n\n```\n{\ntext: string(length: 6-50, preview only)\nimage: string(url)\nlikes: number(init value: 0)\ntags: array(string)\nowner: string(User id)\n}\n\n```\n\n### Post Preview\n\nPost data as a part of list.\n\n```\n{\nid: string(autogenerated)\ntext: string(length: 6-50, preview only)\nimage: string(url)\nlikes: number(init value: 0)\ntags: array(string)\npublishDate: string(autogenerated)\nowner: object(User Preview)\n}\n\n```\n\n### Post\n\nPost data returned by id.\n\n```\n{\nid: string(autogenerated)\ntext: string(length: 6-1000)\nimage: string(url)\nlikes: number(init value: 0)\nlink: string(url, length: 6-200)\ntags: array(string)\npublishDate: string(autogenerated)\nowner: object(User Preview)\n}\n\n```\n\n### Comment Create\n\nComment data to create new item.\n\n```\n{\nmessage: string(length: 2-500)\nowner: string(User Id)\npost: string(Post Id)\n}\n\n```\n\n### Comment\n\n```\n{id: string(autogenerated)\nmessage: string(length: 2-500)\nowner: object(User Preview)\npost: string(Post Id)\npublishDate: string(autogenerated)\n}\n\n```\n\n### Tag\n\nPlain type. Array of strings.\n\nEndFragment\n\n# Queries\n\n## User Data\n\n### Get List\n\n> Get list of users sorted by registration date.- Pagination query params available.  \n> \\- Created query params available.  \n> GET /user\n\n### Get User by id\n\n> Get user full data by user id  \n> GET /user/:id\n\n### Create User\n\n> Create new user, return created user data.  \n> Body: User Create (firstName, lastName, email are required)  \n> POST /user/create\n\n### Update User\n\n> Update user by id, return updated User data  \n> Body: User data, only fields that should be updated. (email is forbidden to update)  \n> PUT /user/:id\n\n### Delete User\n\n> Delete user by id, return id of deleted user  \n> DELETE /user/:id\n\n## Post Data\n\n### Get List\n\n> Get list of posts sorted by creation date.  \n> \\- Pagination query params available.  \n> \\- Created query params available.  \n> GET /post\n\n### Get List By User\n\n> Get list of posts for specific user sorted by creation date.  \n> \\- Pagination query params available.  \n> \\- Created query params available.  \n> GET /user/:id/post\n\n### Get List By Tag\n\n> Get list of posts for specific tag sorted by creation date.  \n> \\- Pagination query params available.  \n> \\- Created query params available.  \n> GET /tag/:id/post\n\n### Get Post by id\n\n> Get post full data by post id  \n> GET /post/:id\n\n### Create Post\n\n> Create new post, return created post data.  \n> Body: Post Create (owner and post fields are required)  \n> POST /post/create\n\n### Update Post\n\n> Update post by id, return updated Post data  \n> Body: Post data, (owner field is forbidden to update)  \n> PUT /post/:id\n\n### Delete Post\n\n> Delete post by id, return id of deleted post  \n> DELETE /post/:id\n\n## Comment Data\n\n### Get List\n\n> Get list of comments sorted by creation date.  \n> \\- Pagination query params available.  \n> \\- Created query params available.  \n> GET /comment\n\n### Get List By Post\n\n> Get list of comments for specific post sorted by creation date.  \n> \\- Pagination query params available.  \n> \\- Created query params available.  \n> GET /post/:id/comment\n\n### Get List By User\n\n> Get list of comments for specific user sorted by creation date.  \n> \\- Pagination query params available.  \n> \\- Created query params available.  \n> GET /user/:id/comment\n\n### Create Comment\n\n> Create new comment, return created comment data.  \n> Body: Comment Create (owner and post fields are required)  \n> POST /comment/create\n\n### Delete Comment\n\n> Delete comment by id, return id of deleted post  \n> DELETE /comment/:id\n\n### Tag Data\n\n### Get List\n\n> Get list of tags  \n> GET /tag",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21955493"
	},
	"item": [
		{
			"name": "User Data",
			"item": [
				{
					"name": "Get User List",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}user/",
							"host": [
								"{{url}}user"
							],
							"path": [
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}user/{{user_id}}",
							"host": [
								"{{url}}user"
							],
							"path": [
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User Random",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"jsonData = pm.response.json();\r",
									"pm.environment.set(\"user_id\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\" : \"{{$randomTitle}}\",\r\n    \"firstName\" : \"{{$randomFirstName}}\",\r\n    \"lastName\" : \"{{$randomLastName}}\",\r\n    \"gender\" : \"{{$randomGender}}\",\r\n    \"email\" : \"{{$randomEmail}}\",\r\n    \"dateOfBirth\" : \"{{$randomDatePast}}\",\r\n    \"phone\" : \"{{$randomPhoneNumber}}\",\r\n    \"picture\" : \"{{$randomAvatarImage}}\",\r\n    \"location\" : {\r\n        \"street\" : \"{{$randomStreetName}}\",\r\n        \"city\" : \"{{$randomCity}}\",\r\n        \"country\" : \"{{$randomCountry}}\",\r\n        \"timezone\" : \"{{$randomTimezone}}\",\r\n        \"state\" : \"{{$randomState}}\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}user/create",
							"host": [
								"{{url}}user"
							],
							"path": [
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"phone\": \"+79589634888\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}user/{{user_id}}",
							"host": [
								"{{url}}user"
							],
							"path": [
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}user/{{user_id}}",
							"host": [
								"{{url}}user"
							],
							"path": [
								"{{user_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Post Data",
			"item": [
				{
					"name": "Get Post List",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}post",
							"host": [
								"{{url}}post"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get List by User",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}user/{{user_id}}/post",
							"host": [
								"{{url}}user"
							],
							"path": [
								"{{user_id}}",
								"post"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get List by Tag",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}tag/{{user_id}}/post",
							"host": [
								"{{url}}tag"
							],
							"path": [
								"{{user_id}}",
								"post"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Post by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}post/{{post_id}}",
							"host": [
								"{{url}}post"
							],
							"path": [
								"{{post_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"jsonData = pm.response.json();\r",
									"pm.environment.set(\"post_id\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"text\" : \"{{$randomJobTitle}}\",\r\n    \"image\" : \"{{$randomImageUrl}}\",\r\n    \"likes\" : {{$randomInt}},\r\n    \"link\" : \"{{$randomTransportImage}}\",\r\n    \"tags\" : \"{{$randomTags}}\",\r\n    \"owner\" : \"{{user_id}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}post/create",
							"host": [
								"{{url}}post"
							],
							"path": [
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Post",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"likes\" : 7,\r\n    \"tags\" : \"#instaphoto\",\r\n    \"link\" : \"www.link.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}post/{{post_id}}",
							"host": [
								"{{url}}post"
							],
							"path": [
								"{{post_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Post",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}post/{{post_id}}",
							"host": [
								"{{url}}post"
							],
							"path": [
								"{{post_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Comment Data",
			"item": [
				{
					"name": "Get Comment List",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}comment",
							"host": [
								"{{url}}comment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get List by Post",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}post/{{post_id}}/comment",
							"host": [
								"{{url}}post"
							],
							"path": [
								"{{post_id}}",
								"comment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get List by User",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}user/{{user_id}}/comment",
							"host": [
								"{{url}}user"
							],
							"path": [
								"{{user_id}}",
								"comment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"jsonData = pm.response.json();\r",
									"pm.environment.set(\"comment_id\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"message\" : \"{{$randomWords}}\",\r\n    \"owner\" : \"{{user_id}}\",\r\n    \"post\" : \"{{post_id}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}comment/create",
							"host": [
								"{{url}}comment"
							],
							"path": [
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Comment",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}commet/{{comment_id}}",
							"host": [
								"{{url}}commet"
							],
							"path": [
								"{{comment_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Tag Data",
			"item": [
				{
					"name": "Get Tag List",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}tag",
							"host": [
								"{{url}}tag"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "63760c781f1d8505e69a587c",
				"type": "string"
			},
			{
				"key": "key",
				"value": "app-id",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Dynamic variables for Dummy API",
					"",
					"",
					"// User Data",
					"var Gender = [\"male\", \"female\", \"other\"] // create array 'Gender'",
					"pm.environment.set(\"$randomGender\", Gender[Math.floor(Math.random() * Gender.length)]) // set $randomGender as any value from Gender array",
					"",
					"var Title = [\"mr\", \"ms\", \"mrs\", \"miss\", \"dr\"]",
					"pm.environment.set(\"$randomTitle\", Title[Math.floor(Math.random() * Title.length)])",
					"",
					"var Timezone = [\"-12:00\", \"-9:00\", \"0:00\", \"+7:00\", \"+12:00\"]",
					"pm.environment.set(\"$randomTimezone\", Timezone[Math.floor(Math.random() * Timezone.length)])",
					"",
					"var State = [ \"AK - Alaska\", \"AL - Alabama\", \"AR - Arkansas\", \"AS - American Samoa\", \"AZ - Arizona\"]",
					"pm.environment.set(\"$randomState\", State[Math.floor(Math.random() * State.length)])",
					"",
					"",
					"// Post Data",
					"var Tags = [\"#instashot\", \"#aroundtheworld\", \"#bestfriends\"]",
					"pm.environment.set(\"$randomTags\", Tags[Math.floor(Math.random() * Tags.length)])"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Status code is 200\", function () {",
					"    pm.response.to.have.status(200);",
					"});"
				]
			}
		}
	]
}